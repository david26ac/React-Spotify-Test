{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/content.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport Bar from './bar';\nimport Main from './main';\nimport '../css/content.scss';\n\nclass content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      album_img: '',\n      datos: [],\n      token: '',\n      search: [],\n      bg: '',\n      albums: [],\n      recomended: ''\n    };\n  }\n\n  componentDidMount() {\n    let token = '';\n    let embed_state = this; //Get Token\n\n    Axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Authorization': 'Basic ' + btoa('8968861e742a4d3abd77147e67371983' + ':' + '6c5757156c9b430aae5d0f9998b054be'),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n      embed_state.setState({\n        token: response.data.access_token\n      });\n      embed_state.setState({\n        datos: response\n      });\n      Axios('https://api.spotify.com/v1/tracks/2N0volXQpwsvjDorTTxBAU', {\n        headers: {\n          'Authorization': 'Bearer ' + response.data.access_token\n        },\n        method: 'GET'\n      }).then(function (response) {\n        // handle success\n        let artist = response.data.artists[0].name;\n        let album_img = response.data.album.images[1].url;\n        embed_state.setState({\n          artist: artist,\n          album_img: album_img\n        });\n        console.log(response);\n      }).catch(function (error) {\n        // handle error\n        console.log('TOKEN ERROR ----- ' + error);\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function (error) {// always executed\n      //console.log(error)\n    }); // Ask for track or Playlist\n  }\n\n  async get_search(val) {\n    let data = val;\n    console.log(data);\n    let img_bg = val.data.artists.items[0].images[0].url;\n    data = JSON.stringify(val);\n    this.setState({\n      search: data,\n      bg: `url(${img_bg})`,\n      artist: val.data.artists.items[0].name\n    });\n    let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums', {\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token\n      },\n      params: {\n        id: ''\n      },\n      method: 'GET'\n    });\n  }\n\n  get_albums(val) {\n    let data = val;\n    data = JSON.stringify(val);\n    this.setState({\n      albums: data\n    });\n    console.log(this.state.albums);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        datos: this.state.datos,\n        token: this.state.token,\n        albums: this.get_albums.bind(this),\n        search_found: this.get_search.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offset-3 col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg\",\n            style: {\n              'background-image': this.state.bg\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: this.state.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [this.state.albums != '' ? JSON.parse(this.state.albums).map(album => console.log(album)) : '', /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recomended Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offset-3 col-9\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            found_data: this.state.search,\n            albums: this.state.albums,\n            token: this.state.token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default content;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/content.js"],"names":["Axios","React","Bar","Main","content","Component","constructor","props","state","artist","album_img","datos","token","search","bg","albums","recomended","componentDidMount","embed_state","headers","btoa","data","method","then","response","console","log","setState","access_token","artists","name","album","images","url","catch","error","get_search","val","img_bg","items","JSON","stringify","respuesta","id","params","get_albums","render","bind","parse","map"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\nimport Bar from './bar';\nimport Main from './main';\n\nimport '../css/content.scss'\n\nclass content extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            album_img : '',\n            datos: [],\n            token: '',\n            search : [],\n            bg: '',\n            albums: [],\n            recomended: ''\n        }\n    }\n    componentDidMount(){\n        let token = '';\n        let embed_state = this\n        //Get Token\n        Axios('https://accounts.spotify.com/api/token',{\n            headers : {\n                'Authorization' : 'Basic ' + btoa('8968861e742a4d3abd77147e67371983' + ':' + '6c5757156c9b430aae5d0f9998b054be'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            data : 'grant_type=client_credentials',\n            method: 'POST'\n        })\n        .then(function (response) {\n            // handle success\n            console.log(response);\n            embed_state.setState({\n                token: response.data.access_token\n            })\n            embed_state.setState({\n                datos: response\n            })\n            Axios('https://api.spotify.com/v1/tracks/2N0volXQpwsvjDorTTxBAU',{\n                headers : {\n                    'Authorization' : 'Bearer ' + response.data.access_token\n                },\n                method: 'GET'\n            })\n            .then(function (response) {\n                // handle success\n                let artist = response.data.artists[0].name;\n                let album_img = response.data.album.images[1].url;\n                embed_state.setState({\n                    artist :  artist,\n                    album_img : album_img\n                })\n                console.log(response)\n            })\n            .catch(function (error) {\n            // handle error\n                console.log('TOKEN ERROR ----- ' + error);\n            })\n    \n        })\n        .catch(function (error) {\n        // handle error\n            console.log(error);\n        })\n        .then(function (error) {\n        // always executed\n            //console.log(error)\n        });\n\n        // Ask for track or Playlist\n\n    }\n    async get_search(val){\n        let data = val\n        console.log(data)\n\n        let img_bg = val.data.artists.items[0].images[0].url\n        data = JSON.stringify(val)\n        this.setState({\n            search : data,\n            bg : `url(${img_bg})`,\n            artist:  val.data.artists.items[0].name \n        })\n        let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums',{\n            headers : {\n                'Authorization' : 'Bearer ' + this.state.token\n            },\n            params : {\n                id : ''\n            },\n            method: 'GET'\n        })\n    }\n    get_albums(val){\n        let data = val\n        data = JSON.stringify(val)\n        this.setState({\n            albums : data\n        })\n        console.log(this.state.albums)\n    }\n\n    render(){\n        return (\n            <div className='container'>\n                <Bar datos={this.state.datos} token={this.state.token} albums={this.get_albums.bind(this)} search_found={this.get_search.bind(this)}/>\n                <div className=\"row\">\n                    <div className=\"offset-3 col-6\">\n                        <div className='bg' style={{'background-image' : this.state.bg}}>   \n                            <div className=\"screen\"></div>\n                            <h2>{this.state.artist}</h2>\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                        {this.state.albums != '' ? \n                            JSON.parse(this.state.albums).map(\n                                album => console.log(album)\n                                )\n                            : ''} \n                        <h2>Recomended Albums</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"offset-3 col-9\">\n                        <Main found_data = {this.state.search} albums={this.state.albums} token={this.state.token}/>\n                    </div>\n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default content;"]},"metadata":{},"sourceType":"module"}