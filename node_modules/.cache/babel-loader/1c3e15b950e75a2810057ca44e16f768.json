{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport '../css/main.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      albums: false,\n      content_albums: [],\n      id: ''\n    };\n  }\n\n  albums(e) {\n    console.log(e.currentTarget.id);\n    this.setState({\n      albums: true,\n      id: e.currentTarget.id\n    });\n  }\n\n  render() {\n    let artists = '';\n\n    if (this.props.found_data != '') {\n      artists = JSON.parse(this.props.found_data);\n      artists = artists.data.artists.items;\n      console.log(artists);\n    }\n\n    if (this.state.albums == true) {\n      var albums = [];\n      albums = JSON.parse(this.props.albums);\n      albums = albums.data.items;\n      console.log(albums);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: artists ? artists.map((artist, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row content_artist\",\n              onClick: this.albums.bind(this),\n              id: artist.name,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cont_img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"img-fluid\",\n                    src: artist.images[2] ? artist.images[2].url : '',\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info_artist\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      class: \"artist\",\n                      children: artist.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"followers \", artist.followers.total]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: 'https://open.spotify.com/artist/' + artist.id,\n                      className: \"ver_artist\",\n                      target: \"_blank\",\n                      children: \"Ver artista\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"generos\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: artist.genres.map((genero, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"genero\",\n                        children: [genero, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row albums\",\n              children: this.state.albums == true && this.state.id == artist.name ? albums.map(album => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"album\",\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: album.external_urls.spotify,\n                      target: \"_blank\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: album.images[1].url,\n                        class: \"img-fluid\",\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: album.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 73\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: album.release_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 61\n                }, this);\n              }) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js"],"names":["Axios","React","Main","Component","constructor","props","state","artist","albums","content_albums","id","e","console","log","currentTarget","setState","render","artists","found_data","JSON","parse","data","items","map","key","bind","name","images","url","followers","total","genres","genero","index","album","external_urls","spotify","release_date"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\n\nimport '../css/main.scss'\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            albums : false,\n            content_albums : [],\n            id : ''\n        }\n    }\n    albums(e){\n        console.log(e.currentTarget.id)\n        this.setState({\n            albums : true,\n            id : e.currentTarget.id\n        })\n\n    }   \n    render(){\n        let artists = ''\n        if(this.props.found_data != ''){\n            artists = JSON.parse(this.props.found_data)\n            artists = artists.data.artists.items\n            console.log(artists)\n        }\n        if(this.state.albums == true){\n            var albums = []\n            albums = JSON.parse(this.props.albums)\n            albums = albums.data.items\n            console.log(albums)\n        }\n        return (\n            <div>\n                <main>\n                    {artists ? artists.map(\n                        (artist, key) => {\n                            return(\n                                <div>\n                                    <div class='row content_artist' onClick={this.albums.bind(this)} id={artist.name}>\n                                        <div className=\"col-2\">\n                                            <div className=\"cont_img\">\n                                                <img className='img-fluid' src={ artist.images[2] ? (artist.images[2].url) : ''} alt=\"\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <div className=\"info_artist\">\n                                                <div>\n                                                    <h3 class='artist'>{artist.name}</h3>\n                                                    <p>followers {artist.followers.total}</p>\n                                                    <a href={'https://open.spotify.com/artist/' + artist.id} className='ver_artist' target='_blank'>Ver artista</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className='generos'>\n                                                <p>\n                                                {artist.genres.map(\n                                                    (genero,index) => {\n                                                        return(\n                                                            <span className='genero'>{genero} </span>\n                                                        )\n                                                    }\n                                                )}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row albums\">\n                                        {\n                                            this.state.albums == true &&  this.state.id == artist.name ?\n                                                albums.map(\n                                                    album => {\n                                                        return (\n                                                            <div className=\"col-4\">\n                                                                <div className=\"album\">\n                                                                    <a href={album.external_urls.spotify} target='_blank'>\n                                                                        <img src={album.images[1].url} class='img-fluid' alt=\"\"/>\n                                                                        <p>{album.name}</p>\n                                                                    </a>\n                                                                    <span>{album.release_date}</span>\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    }\n                                                )\n                                            : ''\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        }) \n                    : ''}\n                </main>\n                <div className=\"list\">\n \n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}