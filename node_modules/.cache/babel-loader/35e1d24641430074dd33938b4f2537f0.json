{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\nimport '../css/main.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      albums: false,\n      content_albums: [],\n      id: '',\n      albumnes: []\n    };\n  }\n\n  async albums(e) {\n    console.log(e.currentTarget);\n    let temp_state = this;\n    let artist_id = e.currentTarget.id;\n    await this.setState({\n      albums: true,\n      id: artist_id\n    });\n    console.log(this.state.id);\n    let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums', {\n      headers: {\n        'Authorization': 'Bearer ' + this.props.token\n      },\n      params: {\n        id: artist_id\n      },\n      method: 'GET'\n    });\n    console.log(this);\n    let albums = respuesta.data.items;\n    console.log(respuesta.data.items);\n    await this.setState({\n      albumnes: JSON.stringify(respuesta.data.items)\n    });\n  }\n\n  render() {\n    let artists = '';\n    let albums = '';\n\n    if (this.props.found_data != '') {\n      artists = JSON.parse(this.props.found_data);\n      artists = artists.data.artists.items;\n      console.log(artists);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: artists ? artists.map((artist, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              defaultActiveKey: \"0\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                    as: Button,\n                    variant: \"link\",\n                    eventKey: \"0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"row content_artist\",\n                      \"data-toggle\": \"collapse\",\n                      \"data-target\": artist.id,\n                      \"aria-expanded\": \"true\",\n                      \"aria-controls\": \"collapseOne\",\n                      onClick: this.albums.bind(this),\n                      id: artist.id,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"cont_img\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            className: \"img-fluid\",\n                            src: artist.images[2] ? artist.images[2].url : '',\n                            alt: \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 70,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 69,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-6\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"info_artist\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                              class: \"artist\",\n                              children: artist.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 76,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              children: [\"followers \", artist.followers.total]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 77,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: 'https://open.spotify.com/artist/' + artist.id,\n                              className: \"ver_artist\",\n                              target: \"_blank\",\n                              children: \"Ver artista\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 78,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 75,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 74,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-4\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"generos\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: artist.genres.map((genero, index) => {\n                              return /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"genero\",\n                                children: [genero, \" \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 88,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                  eventKey: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row albums\",\n                      children: this.state.albumnes != '' && artist.id == this.state.id ? JSON.parse(this.state.albumnes).map(album => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col-4\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"album\",\n                            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                              href: album.external_urls.spotify,\n                              target: \"_blank\",\n                              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                                src: album.images[1].url,\n                                class: \"img-fluid\",\n                                alt: \"\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 109,\n                                columnNumber: 85\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                children: album.name\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 110,\n                                columnNumber: 85\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 108,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              class: \"tracks\",\n                              children: [\"Tracks : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: album.total_tracks\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 112,\n                                columnNumber: 108\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 112,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: album.release_date\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 113,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 107,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 73\n                        }, this);\n                      }) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js"],"names":["Axios","React","Accordion","Button","Card","Main","Component","constructor","props","state","artist","albums","content_albums","id","albumnes","e","console","log","currentTarget","temp_state","artist_id","setState","respuesta","headers","token","params","method","data","items","JSON","stringify","render","artists","found_data","parse","map","key","bind","images","url","name","followers","total","genres","genero","index","album","external_urls","spotify","total_tracks","release_date"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from \"react-bootstrap/Card\";\n\nimport '../css/main.scss'\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            albums : false,\n            content_albums : [],\n            id : '',\n            albumnes: []\n        }\n    }\n    async albums(e){\n        console.log(e.currentTarget)\n        let temp_state = this\n        let artist_id = e.currentTarget.id\n        await this.setState({\n            albums : true,\n            id : artist_id\n        })\n        console.log(this.state.id)\n        let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums',{\n            headers : {\n                'Authorization' : 'Bearer ' + this.props.token\n            },\n            params : {\n                id : artist_id\n            },\n            method: 'GET'\n        })\n        console.log(this)\n        let albums = respuesta.data.items\n        console.log(respuesta.data.items)\n        await this.setState({\n            albumnes: JSON.stringify(respuesta.data.items)\n        })\n\n    }\n    \n    render(){\n        let artists = ''\n        let albums =''\n        if(this.props.found_data != ''){\n            artists = JSON.parse(this.props.found_data)\n            artists = artists.data.artists.items\n            console.log(artists)\n        }\n        return (\n            <div>\n                <main>\n                    {artists ? artists.map(\n                        (artist, key) => {\n                            return(\n                                <div>\n                                    <Accordion defaultActiveKey=\"0\">\n                                        <Card>\n                                            <Card.Header>\n                                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                    <div class='row content_artist' data-toggle=\"collapse\" data-target={artist.id} aria-expanded=\"true\" aria-controls=\"collapseOne\" onClick={this.albums.bind(this)} id={artist.id}>\n                                                        <div className=\"col-2\">\n                                                            <div className=\"cont_img\">\n                                                                <img className='img-fluid' src={ artist.images[2] ? (artist.images[2].url) : ''} alt=\"\"/>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-6\">\n                                                            <div className=\"info_artist\">\n                                                                <div>\n                                                                    <h3 class='artist'>{artist.name}</h3>\n                                                                    <p>followers {artist.followers.total}</p>\n                                                                    <a href={'https://open.spotify.com/artist/' + artist.id} className='ver_artist' target='_blank'>Ver artista</a>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-4\">\n                                                            <div className='generos'>\n                                                                <p>\n                                                                {artist.genres.map(\n                                                                    (genero,index) => {\n                                                                        return(\n                                                                            <span className='genero'>{genero} </span>\n                                                                        )\n                                                                    }\n                                                                )}\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Accordion.Toggle>\n                                            </Card.Header>\n                                            <Accordion.Collapse eventKey=\"0\">\n                                                <Card.Body>\n\n                                                    <div className=\"row albums\">\n                                                        {this.state.albumnes != '' && artist.id == this.state.id? \n                                                            JSON.parse(this.state.albumnes).map(\n                                                                album => {\n                                                                    return (\n                                                                        <div className=\"col-4\">\n                                                                            <div className=\"album\">\n                                                                                <a href={album.external_urls.spotify} target='_blank'>\n                                                                                    <img src={album.images[1].url} class='img-fluid' alt=\"\"/>\n                                                                                    <p>{album.name}</p>\n                                                                                </a>\n                                                                                <p class='tracks'>Tracks : <span>{album.total_tracks}</span></p>\n                                                                                <span>{album.release_date}</span>\n                                                                            </div>\n                                                                        </div>\n                                                                    )\n                                                                }\n                                                            )\n                                                        : ''}\n                                                    </div>\n                                                    \n                                                    \n                                                </Card.Body>\n                                            </Accordion.Collapse>\n                                        </Card>\n                                    </Accordion>\n                                </div>\n                            )\n                        }) \n                    : ''}\n                </main>\n                <div className=\"list\">\n        \n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}