{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport '../css/main.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      albums: false,\n      content_albums: [],\n      id: '',\n      albumnes: []\n    };\n  }\n\n  async albums(e) {\n    console.log(e.currentTarget);\n    let temp_state = this;\n    let artist_id = e.currentTarget.id;\n    await this.setState({\n      albums: true,\n      id: artist_id\n    });\n    console.log(this.state.id);\n    let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums', {\n      headers: {\n        'Authorization': 'Bearer ' + this.props.token\n      },\n      params: {\n        id: artist_id\n      },\n      method: 'GET'\n    });\n    console.log(this);\n    let albums = respuesta.data.items;\n    console.log(respuesta);\n    await this.setState({\n      albumnes: JSON.stringify(respuesta.data.items)\n    });\n  }\n\n  render() {\n    let artists = '';\n    let albums = '';\n\n    if (this.props.found_data != '') {\n      artists = JSON.parse(this.props.found_data);\n      artists = artists.data.artists.items;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: artists ? artists.map((artist, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row content_artist\",\n              onClick: this.albums.bind(this),\n              id: artist.id,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cont_img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"img-fluid\",\n                    src: artist.images[2] ? artist.images[2].url : '',\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info_artist\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      class: \"artist\",\n                      children: artist.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"followers \", artist.followers.total]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: 'https://open.spotify.com/artist/' + artist.id,\n                      className: \"ver_artist\",\n                      target: \"_blank\",\n                      children: \"Ver artista\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"generos\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: artist.genres.map((genero, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"genero\",\n                        children: [genero, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row albums\",\n              children: [console.log(this.state.albumnes), this.state.albumnes != '' && this.state.albumnes == this.state.id ? JSON.parse(this.state.albumnes).map(album => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: [console.log(album), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"album\",\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: album.external_urls.spotify,\n                      target: \"_blank\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: album.images[1].url,\n                        class: \"img-fluid\",\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: album.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"tracks\",\n                      children: [\"Tracks : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: album.total_tracks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 92\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: album.release_date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 57\n                }, this);\n              }) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js"],"names":["Axios","React","Main","Component","constructor","props","state","artist","albums","content_albums","id","albumnes","e","console","log","currentTarget","temp_state","artist_id","setState","respuesta","headers","token","params","method","data","items","JSON","stringify","render","artists","found_data","parse","map","key","bind","images","url","name","followers","total","genres","genero","index","album","external_urls","spotify","total_tracks","release_date"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\n\nimport '../css/main.scss'\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            albums : false,\n            content_albums : [],\n            id : '',\n            albumnes: []\n        }\n    }\n    async albums(e){\n        console.log(e.currentTarget)\n        let temp_state = this\n        let artist_id = e.currentTarget.id\n        await this.setState({\n            albums : true,\n            id : artist_id\n        })\n        console.log(this.state.id)\n        let respuesta = await Axios('https://api.spotify.com/v1/artists/' + this.state.id + '/albums',{\n            headers : {\n                'Authorization' : 'Bearer ' + this.props.token\n            },\n            params : {\n                id : artist_id\n            },\n            method: 'GET'\n        })\n        console.log(this)\n        let albums = respuesta.data.items\n        console.log(respuesta)\n        await this.setState({\n            albumnes: JSON.stringify(respuesta.data.items)\n        })\n\n    }\n    \n    render(){\n        let artists = ''\n        let albums =''\n        if(this.props.found_data != ''){\n            artists = JSON.parse(this.props.found_data)\n            artists = artists.data.artists.items\n        }\n        return (\n            <div>\n                <main>\n                    {artists ? artists.map(\n                        (artist, key) => {\n                            return(\n                                <div>\n                                    <div class='row content_artist' onClick={this.albums.bind(this)} id={artist.id}>\n                                        <div className=\"col-2\">\n                                            <div className=\"cont_img\">\n                                                <img className='img-fluid' src={ artist.images[2] ? (artist.images[2].url) : ''} alt=\"\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <div className=\"info_artist\">\n                                                <div>\n                                                    <h3 class='artist'>{artist.name}</h3>\n                                                    <p>followers {artist.followers.total}</p>\n                                                    <a href={'https://open.spotify.com/artist/' + artist.id} className='ver_artist' target='_blank'>Ver artista</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className='generos'>\n                                                <p>\n                                                {artist.genres.map(\n                                                    (genero,index) => {\n                                                        return(\n                                                            <span className='genero'>{genero} </span>\n                                                        )\n                                                    }\n                                                )}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row albums\">\n                                        {console.log(this.state.albumnes)}\n                                        {this.state.albumnes != '' && this.state.albumnes == this.state.id? \n                                            JSON.parse(this.state.albumnes).map(\n                                                album => {\n                                                    return (\n                                                        <div className=\"col-4\">\n                                                            {console.log(album)}\n                                                            <div className=\"album\">\n                                                                <a href={album.external_urls.spotify} target='_blank'>\n                                                                    <img src={album.images[1].url} class='img-fluid' alt=\"\"/>\n                                                                    <p>{album.name}</p>\n                                                                </a>\n                                                                <p class='tracks'>Tracks : <span>{album.total_tracks}</span></p>\n                                                                <span>{album.release_date}</span>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                            )\n                                        : ''}\n                                    </div>\n                                </div>\n                            )\n                        }) \n                    : ''}\n                </main>\n                <div className=\"list\">\n \n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}