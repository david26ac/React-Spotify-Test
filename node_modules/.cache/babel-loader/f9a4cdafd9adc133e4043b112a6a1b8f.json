{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/content.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport Bar from './bar';\nimport Main from './main';\nimport '../css/content.scss';\n\nclass content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      album_img: '',\n      datos: [],\n      token: '',\n      search: [],\n      bg: ''\n    };\n  }\n\n  componentDidMount() {\n    let token = '';\n    let embed_state = this; //Get Token\n\n    Axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Authorization': 'Basic ' + btoa('8968861e742a4d3abd77147e67371983' + ':' + '6c5757156c9b430aae5d0f9998b054be'),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(function (response) {\n      // handle success\n      console.log(response);\n      embed_state.setState({\n        token: response.data.access_token\n      });\n      embed_state.setState({\n        datos: response\n      });\n      Axios('https://api.spotify.com/v1/tracks/2N0volXQpwsvjDorTTxBAU', {\n        headers: {\n          'Authorization': 'Bearer ' + response.data.access_token\n        },\n        method: 'GET'\n      }).then(function (response) {\n        // handle success\n        let artist = response.data.artists[0].name;\n        let album_img = response.data.album.images[1].url;\n        embed_state.setState({\n          artist: artist,\n          album_img: album_img\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log('TOKEN ERROR ----- ' + error);\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function (error) {// always executed\n      //console.log(error)\n    }); // Ask for track or Playlist\n  }\n\n  get_search(val) {\n    let data = val;\n    let img_bg = val.data.artists.items[0].images[0].url;\n    data = JSON.stringify(val);\n    this.setState({\n      search: data,\n      bg: `url(${img_bg})`\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Bar, {\n            datos: this.state.datos,\n            token: this.state.token,\n            search_found: this.get_search.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg\",\n            className: \"bg\",\n            style: {\n              'background-image': this.state.bg\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offset-4 col-8\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            found_data: this.state.search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default content;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/content.js"],"names":["Axios","React","Bar","Main","content","Component","constructor","props","state","artist","album_img","datos","token","search","bg","componentDidMount","embed_state","headers","btoa","data","method","then","response","console","log","setState","access_token","artists","name","album","images","url","catch","error","get_search","val","img_bg","items","JSON","stringify","render","bind"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\nimport Bar from './bar';\nimport Main from './main';\n\nimport '../css/content.scss'\n\nclass content extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            album_img : '',\n            datos: [],\n            token: '',\n            search : [],\n            bg: ''\n        }\n    }\n    componentDidMount(){\n        let token = '';\n        let embed_state = this\n        //Get Token\n        Axios('https://accounts.spotify.com/api/token',{\n            headers : {\n                'Authorization' : 'Basic ' + btoa('8968861e742a4d3abd77147e67371983' + ':' + '6c5757156c9b430aae5d0f9998b054be'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            data : 'grant_type=client_credentials',\n            method: 'POST'\n        })\n        .then(function (response) {\n            // handle success\n            console.log(response);\n            embed_state.setState({\n                token: response.data.access_token\n            })\n            embed_state.setState({\n                datos: response\n            })\n            Axios('https://api.spotify.com/v1/tracks/2N0volXQpwsvjDorTTxBAU',{\n                headers : {\n                    'Authorization' : 'Bearer ' + response.data.access_token\n                },\n                method: 'GET'\n            })\n            .then(function (response) {\n                // handle success\n                let artist = response.data.artists[0].name;\n                let album_img = response.data.album.images[1].url;\n                embed_state.setState({\n                    artist :  artist,\n                    album_img : album_img\n                })\n            })\n            .catch(function (error) {\n            // handle error\n                console.log('TOKEN ERROR ----- ' + error);\n            })\n    \n        })\n        .catch(function (error) {\n        // handle error\n            console.log(error);\n        })\n        .then(function (error) {\n        // always executed\n            //console.log(error)\n        });\n\n        // Ask for track or Playlist\n\n    }\n    get_search(val){\n        let data = val\n        let img_bg = val.data.artists.items[0].images[0].url\n        data = JSON.stringify(val)\n        this.setState({\n            search : data,\n            bg : `url(${img_bg})` \n        })\n    }\n    render(){\n        return (\n            <div className='container'>\n                <div className=\"row\">\n                    <div>\n                        <Bar datos={this.state.datos} token={this.state.token} search_found={this.get_search.bind(this)}/>\n                        <div className=\"bg\" className=\"bg\" style={{'background-image' : this.state.bg}}></div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"offset-4 col-8\">\n                        <Main found_data = {this.state.search}/>\n                    </div>\n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default content;"]},"metadata":{},"sourceType":"module"}