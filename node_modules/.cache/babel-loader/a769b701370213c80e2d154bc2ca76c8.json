{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js\";\nimport Axios from 'axios';\nimport React from 'react';\nimport '../css/main.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artist: '',\n      albums: false,\n      content_albums: []\n    };\n  }\n\n  albums(e) {\n    this.setState({\n      albums: true\n    });\n  }\n\n  render() {\n    let artists = '';\n\n    if (this.props.found_data != '') {\n      artists = JSON.parse(this.props.found_data);\n      artists = artists.data.artists.items;\n      console.log(artists);\n    }\n\n    if (this.state.albums == true) {\n      var albums = [];\n      albums = JSON.parse(this.props.albums);\n      albums = albums.data.items;\n      console.log(this.state.albums);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: artists ? artists.map((artist, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"content_artist\",\n            onClick: this.albums.bind(this),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cont_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-fluid\",\n                src: artist.images[2] ? artist.images[2].url : '',\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info_artist\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  class: \"artist\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"followers \", artist.followers.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: 'https://open.spotify.com/artist/' + artist.id,\n                  className: \"ver_artist\",\n                  target: \"_blank\",\n                  children: \"Ver artista\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"generos\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: artist.genres.map((genero, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"genero\",\n                      children: genero\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: this.state.albums == true ? albums.map(album => {\n          /*#__PURE__*/\n          _jsxDEV(\"p\", {\n            children: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/davidacuna/Documents/Spotify_test/spotify_test/src/components/main.js"],"names":["Axios","React","Main","Component","constructor","props","state","artist","albums","content_albums","e","setState","render","artists","found_data","JSON","parse","data","items","console","log","map","key","bind","images","url","name","followers","total","id","genres","genero","index","album"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React from 'react';\n\nimport '../css/main.scss'\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            artist : '',\n            albums : false,\n            content_albums : []\n        }\n    }\n    albums(e){\n        this.setState({\n            albums : true\n        })\n\n    }   \n    render(){\n        let artists = ''\n        if(this.props.found_data != ''){\n            artists = JSON.parse(this.props.found_data)\n            artists = artists.data.artists.items\n            console.log(artists)\n        }\n        if(this.state.albums == true){\n            var albums = []\n            albums = JSON.parse(this.props.albums)\n            albums = albums.data.items\n            console.log(this.state.albums)\n        }\n        return (\n            <div>\n                {}\n                <main>\n                    {artists ? artists.map(\n                        (artist, key) => {\n                            return(\n                                <div class='content_artist' onClick={this.albums.bind(this)}>\n                                    <div className=\"cont_img\">\n                                        <img className='img-fluid' src={ artist.images[2] ? (artist.images[2].url) : ''} alt=\"\"/>\n                                    </div>\n                                    <div className=\"info_artist\">\n                                        <div>\n                                            <h3 class='artist'>{artist.name}</h3>\n                                            <p>followers {artist.followers.total}</p>\n                                            <a href={'https://open.spotify.com/artist/' + artist.id} className='ver_artist' target='_blank'>Ver artista</a>\n                                        </div>\n                                        <div className='generos'>\n                                            <p>\n                                            {artist.genres.map(\n                                                (genero,index) => {\n                                                    return(\n                                                        <span className='genero'>{genero}</span>\n                                                    )\n                                                }\n                                            )}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }) \n                    : ''}\n                    \n                </main>\n                <div className=\"list\">\n                    {\n                        this.state.albums == true ?\n                            albums.map(\n                                album => {\n                                    <p>{album.name}</p>\n                                }\n                            )\n                        : ''\n                    }\n                </div>\n            </div>\n        )\n        \n    }\n}\n\n\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}